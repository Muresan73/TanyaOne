<Page
    x:Class="TanyaOne.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TanyaOne"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:maps="using:Windows.UI.Xaml.Controls.Maps"
    mc:Ignorable="d"
    x:Name="Page"
    xmlns:model="using:TanyaOne.Model"
    xmlns:views="using:TanyaOne.View"
    xmlns:interactivity="using:WinRTXamlToolkit.Interactivity">
    
    <Grid Background="Moccasin" >
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="GridViewWidth" >
                <VisualState x:Name="GridView3PanelState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1800"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MGridView.Width" Value="900"></Setter>
                        <Setter Target="RelativeFieldSelector.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="GridView2PanelState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RelativeFieldSelector.Visibility" Value="Collapsed"/>
                        <Setter Target="MGridView.Width" Value="600"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="GridView1PanelState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="700"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RelativeFieldSelector.Visibility" Value="Collapsed"/>
                        <Setter Target="MGridView.Width" Value="300"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="GridView2NoPanelState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--<Setter Target="MGridView.Width" Value="600"></Setter>-->
                        <Setter Target="MapColumnDefinition.Width" Value="0"></Setter>
                        <Setter Target="PanelColumnDefinition.Width" Value="*"></Setter>
                        <Setter Target="RelativeFieldSelector.Visibility" Value="Visible"/>
                        <Setter Target="MapControl.Visibility" Value="Collapsed"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="GridView1NoPanelState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--<Setter Target="MGridView.Width" Value="250"></Setter>-->
                        <Setter Target="MapColumnDefinition.Width" Value="0"></Setter>
                        <Setter Target="PanelColumnDefinition.Width" Value="*"></Setter>
                        <Setter Target="MapControl.Visibility" Value="Collapsed"></Setter>
                        <Setter Target="RelativeFieldSelector.Visibility" Value="Visible"/> 
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" x:Name="MapColumnDefinition"/>
            <ColumnDefinition Width="Auto" x:Name="PanelColumnDefinition" />
        </Grid.ColumnDefinitions>
        <maps:MapControl  x:Name="MapControl"  MapServiceToken="{x:Bind MPageViewModel.MVM.MapKey}" Style="AerialWithRoads" Center="{x:Bind MPageViewModel.MVM.Center, Mode=OneWay}" ZoomLevel="15" />
        <StackPanel  Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20" >
            <ComboBox 
                 SelectedItem="{x:Bind MPageViewModel.SelectedField, Mode=TwoWay}" ItemsSource="{x:Bind MPageViewModel.Fields,Mode=OneWay}" SelectionChanged="{x:Bind MPageViewModel.LocationSelected}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="model:FieldData">
                        <TextBlock Text="{x:Bind name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox 
                 SelectedItem="{x:Bind MPageViewModel.SelectedNode, Mode=TwoWay}" ItemsSource="{x:Bind MPageViewModel.NodeList,Mode=OneWay}" SelectionChanged="{x:Bind MPageViewModel.NodeSelected}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="model:FieldLocationData">
                        <TextBlock Text="{x:Bind name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <Grid Grid.Column="1" x:Name="MGridView" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <GridView  Grid.Row="0"  Background="Transparent" ItemsSource="{x:Bind MPageViewModel.Tiles,Mode=OneWay}">
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VariableSizedWrapGrid MaximumRowsOrColumns="3" 
                                   Orientation="Horizontal"
                                   HorizontalAlignment="Center" >
                            <VariableSizedWrapGrid.ChildrenTransitions>
                                <TransitionCollection>
                                    <EntranceThemeTransition />
                                    <RepositionThemeTransition/>
                                </TransitionCollection>
                            </VariableSizedWrapGrid.ChildrenTransitions>
                        </VariableSizedWrapGrid>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>
                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="model:Sensor">
                        <Button  Margin="10,10,10,10" Background="White" Click="ButtonBase_OnClick">
                            <RelativePanel Width="250" Height="100" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <!--<Grid  Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>-->
                                <Image x:Name="Icon" Source="{x:Bind AssetUri}" Width="40" Height="50" UseLayoutRounding="True" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignLeftWithPanel="True" Margin="0,5"/>
                                <Viewbox  RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignBottomWith="Icon" RelativePanel.AlignRightWithPanel="True" RelativePanel.RightOf="Icon" >
                                    <TextBlock Text="{x:Bind DisplayNameToShow}" Foreground="{x:Bind design.color}" />
                                </Viewbox>
                                <!--</Grid>-->
                                <TextBlock Text="{x:Bind displayName}" RelativePanel.AlignBottomWithPanel="True" Margin="0,5"/>
                            </RelativePanel>
                        </Button>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>
            <RelativePanel x:Name="RelativeFieldSelector" Grid.Row="0">
                <Border RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignTopWith="FieldBox" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" Background="Green"/>
                <ComboBox x:Name="FieldBox" RelativePanel.AlignBottomWithPanel="True"  RelativePanel.AlignLeftWithPanel="True"  Margin="10,5"
                 SelectedItem="{x:Bind MPageViewModel.SelectedField, Mode=TwoWay}" ItemsSource="{x:Bind MPageViewModel.Fields,Mode=OneWay}" SelectionChanged="{x:Bind MPageViewModel.LocationSelected}" >
                    <ComboBox.ItemTemplate>
                        <DataTemplate x:DataType="model:FieldData">
                            <TextBlock Text="{x:Bind name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox  x:Name="NodeBox" RelativePanel.AlignBottomWithPanel="True"  RelativePanel.RightOf="FieldBox"  Margin="10,5"
                 SelectedItem="{x:Bind MPageViewModel.SelectedNode, Mode=TwoWay}" ItemsSource="{x:Bind MPageViewModel.NodeList,Mode=OneWay}" SelectionChanged="{x:Bind MPageViewModel.NodeSelected}" >
                    <ComboBox.ItemTemplate>
                        <DataTemplate x:DataType="model:FieldLocationData">
                            <TextBlock Text="{x:Bind name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </RelativePanel>
            <views:ChartControl Grid.Row="1" x:Name="ChartControl12"  Margin="0,0,0,25" />
        </Grid>
        <Grid Background="#99FFFFFF" Grid.Column="1" Visibility="{x:Bind MPageViewModel.IsDataLoading, Mode=OneWay}">
            <ProgressRing  IsActive="True" MinWidth="100" MinHeight="100"  />
        </Grid>
        <CommandBar Grid.Column="1" VerticalAlignment="Bottom" ClosedDisplayMode="Minimal">
            <AppBarButton Icon="Sync" Label="Refresh" Click="{x:Bind MPageViewModel.NodeSelected}"/>
            <AppBarButton Icon="BlockContact" Label="Log Out" Click="{x:Bind MPageViewModel.UserLogOut}"/>
        </CommandBar>
    </Grid>

</Page>
